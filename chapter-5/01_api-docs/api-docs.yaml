openapi: 3.0.1
info:
  title: Instagram API
  description: api mirip-mirip instagram
  version: 1.0.0
  contact:
    email: romadhonatatang@gmail.com
servers:
  - url: http://localhost:3000/v1
paths:
  /users:
    post:
      summary: register new user
      description: mendaftarkan user baru kedalam sistem..
      requestBody:
        $ref: "#/components/requestBodies/Register"
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/User"
                  - type: object
                    properties:
                      password:
                        type: string
                        example: agung123
        400:
          description: duplicated email
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: email already used!
      security:
        - bearerAuth: []
      
    get:
      summary: get all users
      parameters:
        - schema:
            type: string
          name: search
          in: query
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/User"
                        - type: object
                          properties:
                            password:
                              type: string
                              example: agung123
  /users/{user_id}:
    parameters:
      - schema:
          type: integer
        name: user_id
        in: path
        required: true
    get:
      summary: get detail user
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    allOf:
                      - $ref: "#/components/schemas/User"
                      - type: object
                        properties:
                          password:
                            type: string
                            example: agung123
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
          example: 11
        name:
          type: string
          example: agung
        email:
          type: string
          example: agung@mail.com
  requestBodies:
    Register:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: agung
              email:
                type: string
                example: agung@mail.com
              password:
                type: string
                example: agung123
